plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.example.tribial"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.room:room-common:2.4.3'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    def lifecycle_version = "2.4.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"


    // TESTING

    //JUnit tests
    testImplementation("junit:junit:4.13.2")
    testImplementation(platform("org.junit:junit-bom:5.8.2"))
    testImplementation("org.junit.jupiter:junit-jupiter")
    testRuntimeOnly("org.junit.vintage:junit-vintage-engine")
    testRuntimeOnly("org.junit.platform:junit-platform-launcher")
    testImplementation("org.junit.jupiter:junit-jupiter-params:5.8.2")
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    testImplementation('org.assertj:assertj-core:3.23.1')

    //Mockito
    testImplementation "org.mockito:mockito-core:4.6.1"
    testImplementation "org.mockito.kotlin:mockito-kotlin:3.2.0"
    testImplementation "org.mockito:mockito-inline:4.6.1"
    testImplementation "io.mockk:mockk:1.12.4"

    // RIBS
    implementation 'com.github.badoo.RIBs:rib-base:0.34.0'
    implementation 'com.github.badoo.RIBs:rib-base-test:0.34.0'
    implementation 'com.github.badoo.RIBs:rib-base-test-activity:0.34.0'
    implementation 'com.github.badoo.RIBs:rib-rx2:0.34.0'
    implementation 'com.github.badoo.RIBs:rib-debug-utils:0.33.3'
    implementation 'com.github.badoo.RIBs:rib-mvicore:0.34.0'

    // MVICore
    implementation 'com.github.badoo.mvicore:mvicore:1.3.1'
    implementation 'com.github.badoo.mvicore:binder:1.3.1'
    implementation 'com.github.badoo.mvicore:mvicore-android:1.3.1'
    implementation 'com.github.badoo.mvicore:mvicore-diff:1.3.1'
    implementation 'com.github.badoo.mvicore:mvicore-debugdrawer:1.2.6'

    // RxJava
    implementation "io.reactivex.rxjava2:rxjava:2.2.21"
    implementation "io.reactivex.rxjava2:rxkotlin:2.2.0"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    androidTestImplementation 'org.junit.jupiter:junit-jupiter'

    // Room
    def room_version = "2.4.2"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // HTTP REQUESTS
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.0'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.google.code.gson:gson:2.9.0'

    // COROUTINE
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.0'

}